// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String  @id @default(uuid())
  username       String  @unique
  imageUrl       String  @db.Text
  externalUserId String  @unique
  bio            String? @db.Text

  follower  Follow[] @relation(name: "follower")
  following Follow[] @relation(name: "following")

  blockUser      Block[] @relation(name: "blockUser")
  blockingByUser Block[] @relation(name: "blockingByUser")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Follow {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  followerUser  User?   @relation(name: "follower", fields: [followerId], references: [id])
  followerId    String?
  followingUser User?   @relation(name: "following", fields: [followingId], references: [id])
  followingId   String?

  @@index([followerId])
  @@index([followingId])
  @@map("followers")
}

model Block {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  blockUser        User?   @relation(name: "blockUser", fields: [blockUserId], references: [id])
  blockUserId      String?
  blockingUserBy   User?   @relation(name: "blockingByUser", fields: [blockingUserById], references: [id])
  blockingUserById String?

  @@index([blockingUserById])
  @@index([blockUserId])
  @@map("blocks")
}
